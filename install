clear
source globals
OUTPUTFILE="install.sh"

BASENAME=costsentry
LABEL=$BASENAME
BUDGETAMOUNT=0USD

DESC="This process will create the following:
    * Billing budget 
    * Compute Engine instance
    * Cloud Run service
    * Pub/Sub topic
    * Cloud Function subscribed to the Pub/Sub topic
        * The sample code in the function will listen for updates to the budget
        * On exceeding the budget amount, the function will shut down resources

It will only affect resources that are configured with a 'label' which you will select.    
"

print_title "COSTSENTRY INSTALL" "$DESC" "5"

handleProject PROJECT "$1"
printf "Using Project ID: $PROJECT \n\n"

determineBillingAccount BA
printf "Using Billing Account ID: $BA \n\n"

# Doing this earlier than normal, as compute is needed to poll things like 
# regions and zones. 
section_open "Enabling services in your GCP project"
    prGcloud "gcloud services enable billingbudgets.googleapis.com"
    prGcloud "gcloud services enable cloudbuild.googleapis.com"
    prGcloud "gcloud services enable compute.googleapis.com"
    prGcloud "gcloud services enable cloudfunctions.googleapis.com"
    prGcloud "gcloud services enable run.googleapis.com"
section_close

computeRegionPicker REGION "$2" "run"
computeZonePicker ZONE "$3" "$REGION"
collectParamters LABEL "$4" "the 'label' to apply to resources which will be affected by this process " "$LABEL"
collectParamters BUDGETAMOUNT "$5" "the currency limit for this budget - ex (${CYAN}0USD)${NC}" "$BUDGETAMOUNT"
get_project_number PROJECTNUMBER "$PROJECT"
get_compute_serviceaccount SACOMPUTE "$PROJECTNUMBER"

SAFUNCTIONSUSER=$BASENAME-functions-sa
SAFUNCTIONS=$SAFUNCTIONSUSER@$PROJECT.iam.gserviceaccount.com

projectDetails "
Project ID:,$PROJECT
Region:,$REGION
Zone:,$ZONE
Billing Account:,$BA
Budget Ammount:,$BUDGETAMOUNT
Project Number:,$PROJECTNUMBER
Compute Service Account:,$SACOMPUTE
Functions Service Account:,$SAFUNCTIONS
"
section_open "Create Pub/Sub channel"
    prGcloud "gcloud pubsub topics create $BASENAME-billing-channel"
section_close 

section_open "Create Cloud Run Service to enforce"
    prGcloud "gcloud run deploy $BASENAME-run-service 
    --image=us-docker.pkg.dev/cloudrun/container/hello --allow-unauthenticated 
    --labels=$LABEL=true --region=$REGION --async"
section_close 

section_open "Create Compute Instance to enforce"
    prGcloud "gcloud compute instances create $BASENAME-example 
    --zone $ZONE --machine-type "n1-standard-1" 
    --image-project "debian-cloud" --image-family "debian-10" 
    --boot-disk-size "200" --boot-disk-type "pd-standard" 
    --boot-disk-device-name "$BASENAME-example" 
    --labels=$LABEL=true"
 section_close

section_open "Creating a Budget"
    prGcloud "gcloud beta billing budgets create --display-name $BASENAME-budget 
    --billing-account $BA --budget-amount $BUDGETAMOUNT 
    --all-updates-rule-pubsub-topic=projects/$PROJECT/topics/$BASENAME-billing-channel"

    BUDGETNAME=$(gcloud beta billing budgets list --format="value(NAME)" --billing-account $BA --filter="displayName:$BASENAME-budget" | xargs)
section_close

section_open "Create Service Account and set permissions"
    prGcloud "gcloud iam service-accounts create $SAFUNCTIONSUSER 
    --description=\"Service Account for the costsentry to run as\" 
    --display-name=\"$SAFUNCTIONS\""
section_close

section_open "Setting permissions"
    printf "Enabling Cloud Function Service Account to manage Cloud Run on $PROJECT \n"
    prGcloud "gcloud projects add-iam-policy-binding $PROJECT 
	--member serviceAccount:$SAFUNCTIONS 
    --role roles/run.admin 
    --no-user-output-enabled"

    printf "Enabling Cloud Function Service Account to stop Compute Engine Instances on $PROJECT \n"
    prGcloud "gcloud projects add-iam-policy-binding $PROJECT 
	--member serviceAccount:$SAFUNCTIONS 
	--role roles/compute.instanceAdmin 
    --no-user-output-enabled"

    printf "Enabling Cloud Build Service Account to act on behalf of Compute Service Account \n"	  
    prGcloud "gcloud iam service-accounts add-iam-policy-binding $SACOMPUTE 
	--member=serviceAccount:$SAFUNCTIONS 
	--role roles/iam.serviceAccountUser --no-user-output-enabled"     
section_close

section_open "Deploy a Cloud Function"
    prGcloud "gcloud functions deploy costsentry --runtime go116 
    --trigger-topic $BASENAME-billing-channel 
    --entry-point LimitUsage --source code/function 
    --set-env-vars GOOGLE_CLOUD_PROJECT=$PROJECT,LABEL=$LABEL 
    --service-account=$SAFUNCTIONS  --region=$REGION"
section_close 

printf "$DIVIDER"
printf "CONGRATS!!!!!!! \n"
printf "You have configured a project, spun up architecture and deployed code.\n"
printf "A budget has been created with a target amount for $BUDGETAMOUNT.\n"
printf "If the spend for your billing account is above that target amount,\n"
printf "the next broadcast message from the budget will trigger the Cloud Function \n"
printf "to stop the VM that was created and set the Cloud Run service to private.\n"
printf "\n"
printf "If you want to simulate the target amount being exceeded immediately,\n"
printf "copy and paste the following into your terminal:  \n\n"
printf "${BCYAN}./simulate $PROJECT $LABEL $REGION ${NC}\n\n"
printf "$DIVIDER"	